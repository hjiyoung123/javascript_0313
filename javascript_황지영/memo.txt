prompt("")
  함수/메서드
  질문을 하는 함수
  ex) confirm


document
  사용자로부터 값을 받고자 할때
  문서객체의 최고봉
  객체/내장 객체
  기능만 갖고 있는 것이 아닌 속성도 갖고 있음
  head 와 body
  문서객체모델
  dom
  window > document > html > head > title > text > body
  window 제이쿼리 반응형 > 화면에 있는 특정한 요소를 가져올 경우

  객체+기능 > 객체와 기능을 쓸때 반드시 온점


변수
  유동성이 있는 값
  variables > var
  변수 충돌이 빈번
  let 지향 > 중복 선언이 불가
  문자형, 숫자형, 논리형, 빈(Null)
  큰따옴표 혹은 작은따옴표 > 문자열로 판단
  따옴표 없이 숫자로 입력 > 숫자로 판단


const
  상수
  변하지 않는 고정값


script 링크 위치 
  async
    웹브라우저가 파싱하는 순서
    자바스크립트 코드가 무겁거나 의존도가 높을 경우

  defer
    파싱후 javascript
    <script defer src="./js/script.js"></script>
    자바스크립트 링크가 여러개 연결되었을 경우에 한해서 사용 > html을 함께 읽어들여야할 때
    충돌날 일이 없을 경우 오류가 날 수 있음

typeof


문자열을 Number로 감싸주면 숫자로 변환


연산자
  산술연산자      + - / %(나눠서 남은 값)
  대입연산자      += -= /= &=
  복합대입연산자  = += += ...


증감연산자
  들어가는 위치에 따라 값이 달라짐
    let num1 = 10;
    let num2 = 20;
    let result;

    num1--;
    document.write(num1, "<br>");

    num1++;
    document.write(num1, "<br>");

    result = num2++
    document.write(result, "<br>");

    result = ++num2;
    document.write(num2, "<br>");


비교연산자
  ==    값이 같다고 판단 (숫자와 문자열을 헷갈려할 수 있음)
  ===   단순이 값 뿐만 아니라 자료형도 같은지 비교
  !=    값이 다른지 비교
    let a = 10;
    let b = 20;
    let c = 10;
    let f = "20";
    let result;

    result = a > b;
    document.write(result, "<br>")

    result = a < b;
    document.write(result, "<br>")

    result = a <= b;
    document.write(result, "<br>")

    result = f == b;
    document.write(result, "<br>")

    result = a != b;
    document.write(result, "<br>")

    result = f === b;
    document.write(result, "<br>")


논리연산자
  &&    and
  ||    or
  !     부정


삼항 조건 연산자
  ?   크다면(조건)
    let a = 10;
    let b = 3;
    let result = a < b ? "javascript" : "Hello";
    document.write(result);


연산자의 우선순위 
  1.  ()          괄호
  2.  ++  --  !   증감/논리 연산자not
  3.  * / %
  4.  + -
  5.  < <=  > >=
  6.  ==  === !=  !==
  7.  &&
  8.  || 
  9.  = +=  -=  *=  /=  %=


let name = prompt("당신의 이름은?", "");
let height = prompt("당신의 키는?", "");
let weight = prompt("당신의 몸무게는?", "");

let normal_w = (height - 100) * 0.9;
let result = weight >= normal_w - 5 && weight <= normal_w + 5;
result = result ? "적정체중입니다." : "적정체중이 아닙니다.";
document.write(name + "님은" + result);



let traffic = prompt("교통비를 알려주세요", "ex.3000");
let eat = prompt("식비를 알려주세요", "ex.6000");
let drink = prompt("음료비를 알려주세요", "ex.3000");

let normal = Number(traffic) + Number(eat) + Number(drink);
let result = normal < 10000;
let result1 = 10000 - normal;
let result2 = normal - 10000;

result = result ? result1 + "원 아껴쓰셨습니다." : result2 + "원 초과하셨습니다.";
document.write(result)


제어문
  if
    0 ""  undefined 을 제외하고 모두 참인 값을 가져옴
  else

  else if
   두가지 이상의 조건식
   조건이 여러개

    let month = prompt("현재는 몇 월 입니까?", "0");

    if(month >= 9 && month <= 11) {
      document.write("독서하기 좋은 가을이네요!");
    } else if (month >= 6 && month <= 8) {
      document.write("여행가기 좋은 여름이네요!");
    } else if (month >= 3 && month <= 5) {
      document.write("햇살 가득한 봄이네요!");
    } else {
      document.write("스키의 계절, 겨울이네요!");
    }
  

  중첩 if문
    let id = "David";
    let pw = "1234";

    let user_id = prompt("id를 입력해주세요");

    if(id == user_id) {
      let user_pw = prompt("pw를 입력해주세요");
      if(pw == user_pw) {
        document.write(user_id + "님 반갑습니다.");
      } else {
        alert("비밀번호가 일치하지 않습니다!")
        location.reload();
      }
    } else {
      alert("아이디가 일치하지 않습니다!");
      location.reload();
    }
  

switch문


반복문
  do while
    한번은 무조건 실행 (조건이 맞지 않음에도 불구하고)
    특정 조건이 될때까지 실행
    알고리즘으로 인해 참의 값을 찾을때까지
  
  for
    초기화된 조건식이 참이면 실행
    반복 횟수가 정해져 있음
    
    for(let i = 1; i <= 10; i++) {
      document.write("반복" + i, "<br>");
    }

    continue
    break

객체
  내장객체
  문서객체


속성
매서드



querySelectorAll 
  가지고 와야하는 요소가 하나 이상일 때

let el of items
  for(let el of items)
  반복해서 액션을 취해라

addEventListener 
  하나가 선택이 되면 다음과 같은 이벤트를 붙여라


참조변수 
  let d < d가 참조변수

d[0] 
  인덱스 번호

배열객체의 시작은 0부터 시작 d[0] 

  let d = new Array();
  d[0] = 10;
  d[1] = "뚜뚜뚜";
  d[2] = true;

  let d = new Array(10, "뚜뚜뚜", true);

  let d = [10, "뚜뚜뚜", true];

length 아이템의 객체개수
  let arr = [30, "따르릉", true];

  document.write("<h3>배열값 가져오기-1</h3>");
  document.write(arr[0], "<br>");
  document.write(arr[1], "<br>");
  document.write(arr[2], "<br>");


  document.write("<h3>배열값 가져오기-2</h3>");
  for(let i = 0; i < arr.length; i++) {
    document.write(arr[i], "<br>");
  }

  document.write("<h3>배열값 가져오기-3</h3>");
  for(i in arr) {
    document.write(arr[i], "<br>");
  }


let arr_1 = ["교대", "교대", "방배", "강남"];
let arr_2 = ["신사", "압구정", "옥수"];


let result = arr_1.join("-");
document.write(result, "<br>");

result = arr_1.concat(arr_2); //서로 다른 객체 묶는거
document.write(result, "<br>");

result = arr_1.slice(1, 3); //1부터 3미만
//특정 구간의 인덱스 영역을 가져옴
document.write(result, "<br>");

arr_1.sort(); //오름차순 정렬 가나다순
document.write(arr_1, "<br>");

arr_2.reverse();
document.write(arr_2, "<br>");





let greenArr = ["교대", "방배", "강남"];
let yellowArr = ["미금", "정자", "수서"];

greenArr.splice(2, 1, "서초", "역삼"); //해당인덱스부터 n개
document.write(greenArr, "<br>");

let data1 = yellowArr.pop(); //마지막 데이터 삭제 수서가 삭제됨
let data2 = yellowArr.shift(); //첫번재 데이터 삭제 미금이 삭제됨

yellowArr.push(data2);
document.write(yellowArr, "<br>");

yellowArr.unshift(data1);
document.write(yellowArr, "<br>");






let t = "Hello Thank you good luck to you";
document.write(t.charAt(16), "<br>"); //16번째 데이터 값을 가져옴
document.write(t.indexOf("you"), "<br>"); //you 문자를 찾아주세요
document.write(t.indexOf("you", 16), "<br>"); //16번째 you 문자를 찾아주세요
document.write(t.lastIndexOf("you", 25), "<br>"); //16번째 you 문자를 찾아주세요
document.write(t.match("luck"), "<br>"); //16번째 you 문자를 찾아주세요
document.write(t.search("you"), "<br>");
document.write(t.substr(21, 4), "<br>"); 
document.write(t.substring(6, 12), "<br>"); //6부터 시작해서 12 전까지 가져와라
document.write(t.replace("you", "me"), "<br>"); //첫번째 나오는 문구를 대체해라
document.write(t.toLowerCase(), "<br>"); 
document.write(t.toUpperCase(), "<br>"); 
document.write(t.length, "<br>"); 

let s = t.split(" "); //특정한 요소로 분리해라
document.write(s[0], "<br>");
document.write(s[4], "<br>");

let str = "A";
let k = str.charCodeAt(0); //아스킷코드
document.write(k, "<br>");
document.write(String.fromCharCode(65), "<br>"); //문자열 중에서 아스킷 코드 65는?








let userName = prompt("당신의 영문 이름은?", "");
let upperName = userName.toUpperCase();
document.write(upperName, "<br>");

let userNum = prompt("당신의 연락처는?", "번호만 입력하세요!");
let result = userNum.substring(0, userNum.length-4) + "****";
document.write(result, "<br>");






let userEmail = prompt("당신의 이메일 주소는?", "");
let arrUrl = [".co.kr", ".com", ".net", ".or.kr", "go.kr"];

let check1 = false;
let check2 = false;

if(userEmail.indexOf("@") > 0) { 
  check1 = true;
}
for(let i = 0; i < arrUrl.length; i++) {
  if(userEmail.indexOf(arrUrl[i]) > 0) {
    check2 = true;
  }
}
if(check1 && check2) {
  document.write(userEmail);
} else {
  window.alert("이메일 형식이 잘못되었습니다.");
}



window.open("https://www.naver.com", "NAVER", "width=1920, height= 1080, left=50 right=50 top=10 scrollbars=no")



setInterval()
  일정한 시간 간격으로 코드를 반복해서 실행하는 메서드





let info = navigator.userAgent.toLowerCase(); //사용자의 브라우저 정보
let osImg = null;

if(info.indexOf('windows') >= 0) { //0보다 크면
  osImg = 'windows.png' //osImg에 window.png를 넣어라
} else if(info.indexOf('macintosh') >= 0) { //macintosh가 존재한다면
  osImg = 'macintosh.png'
} else if(info.indexOf('iphone') >= 0) {
  osImg = 'iphone.png'
} else if(info.indexOf('android') >= 0) {
  osImg = 'android.png'
}

document.write("<img src=\"/0329_Wed/img/1/" + osImg + "\">","<br/>"); //복수로 큰따옴표를 사용했을 경우 앞에 역슬래시 넣기 or 큰따옴표 안에 작은따옴표로 넣기
let scr = screen;
let sc_w = scr.width;
let sc_h = scr.height;

document.write("모니터 해상도 너비: " + sc_w + "px", "<br/>");
document.write("모니터 해상도 높이: " + sc_h + "px", "<br/>");





let phoneNum = prompt("당신의 핸드폰 번호를 입력해주세요", "번호만 입력");
let result_1 = phoneNum.substring(0, phoneNum.length-4); // substring 첫번째 나오는 인덱스부터 두번째 나오는 인덱스 전까지
document.write(result_1, "****", "<br/>");

let imgSrc = "img/bnt_out.jpg";
let result_2 = imgSrc.replace("out.jpg", "over.jpg");
document.write(result_2, "<br/>");






let menu = ["짜장면", "돈까스", "된장국", "부대찌개", "회덮밥"];
let menuNum = Math.floor(Math.random()*menu.length); //무조건 소수점 첫번째 자리를 내림처리 //random 난수를 찾아줌
let result = menu[menuNum];
document.write(result);






자바스크립트 활용공간 개념
  변수
    1개 아이템이자 데이터

  객체
    1개 아이템에 딸린 다수의 데이터
  
  함수
    단순히 데이처를 넣어놓는 것 뿐만 아니라 언제든지 꺼내다 쓸 수 있는 기능을 저장해놓은 공간

    코드를 메모리에 저장해두었다가 호출해서 씀


변수를 정의할때는 var let const 키워드


함수를 정의할때는 function
  호이스팅
    함수문이 정의되기 전에 함수 호출문이 먼저 호출됨
    > 일반 함수만 가능 O
    > 익명 함수는 안됨 X

    //일반함수
    let count = 0;
    myFnc();

    function myFnc() {
      count++;
      document.write("hello" + count, "<br/>");
    }

    myFnc();


    //익명함수 참조변수
    let theFnc = function() { //참조변수 theFnc //임시로 쓰는 거
      count++;
      document.write("bye" + count, "<br/>");
    }

    theFnc();

    let color = ["white", "yellow", "aqua", "purple"]; //[]배열문
    let i = 0;
    function changeColor() {
      i++;
      if(i >= color.length) {
        i = 0; //i가 4가 되는 순간부터 0이 됨 즉, 무한반복
      }

      let bodyTag = document.getElementById("theBody"); //html에서 아이디값을 불러오겠다
      bodyTag.style.backgroundColor = color[i];
    }



매개변수 
  사용자로부터 값을 받아 그 값을 함수에 넣어 작동시키는 변수

  function myFnc(name, area) { //name area 매개변수, 함수를 작동시키는 매개체
    document.write("안녕하세요. " + name + "입니다!", "<br/>");
    document.write("사는 곳은 " + area + "입니다.", "<br/><br/>");
  }

  myFnc("홍당무", "서울")
  myFnc("깍두기", "부산")



  let rightId = "Korea";
  let rightPw = 1234; //== 대입연산자를 두개 쓸 경우 자료형은 체크하지 않고 값만 확인 1234 //===자료형 속성까지 체크 "1234"

  function login(id, pw) {
    if(id == rightId) {
      if(pw == rightPw) {
        document.write(`${id}님 방문을 환영합니다!`); //큰따옴표 없이 `${id}`로 입력가능
      } else {
        alert("잘못된 비번입니다!");
      }
    } else {
      alert("존재하지 않는 아이디입니다.");
    }
  }

  let userId = prompt("아이디를 입력하세요!", "");
  let userPw = prompt("패스워드를 입력하세요!", "");
  login(userId,userPw);

  //prompt 매서드는 함수와 별개
  //함수 안으로 들어갈 수 없음
  //따라서 아이디부터 오류로 넣었을시 바로 오류 알림이 뜨진 않음




  function sum() {
  let sum = 0;
  for(let i = 0; i < arguments.length; i++) { //for문의 초기값 //arguments를 사용함으로써 매개변수를 사용하지 않음에도 사용자가 입력한 데이터를 가져올 수 있음
    sum += arguments[i]; //한번 반복시마다 arguments에 인덱스 값을 넣어라
  } 
  document.write(sum);
  }

  let a = prompt("수학점수를 입력해주세요", "");
  let b = prompt("국어점수를 입력해주세요", "");
  let c = prompt("영어점수를 입력해주세요", "");

  sum(Number(a), Number(b), Number(c));





함수 스코프
  지역함수
  전역함수


parseInt 
  정수로 바꿔줌

return문
  함수로 반환시켜줌
  = 강제 종료

  let num1 = Number(prompt("첫 번째 숫자는?", "0"));
  let num2 = Number(prompt("두 번째 숫자는?", "0"));
  let result = addNum(num1, num2);
  alert("두 수를 더한 값은" + result + "입니다");

  function addNum(a, b){
    //let sum = a + b;
    return a + b;
  }


for문
  초기값 조건식

  let arrSubject = ["국어", "수학"];
  let result = testAvg(arrSubject);

  function testAvg(arrData) {
    let sum = 0;
    for(let i = 0; i < arrData.length; i++) {
      sum += parseInt(prompt(arrData[i] + "점수는?", "0"));
    }
    let avg = sum / arrData.length;
    return avg;
  }

  document.write(`평균 점수는 ${result}점 입니다.`)






재귀함수
  let num = 0;
  function testFnc() {
    num++;
    document.write(num, "<br/>");
    if(num == 10) return;

    testFnc(); //지역변수
  }

  testFnc();//전역변수



스코프 
  = 범위


  let myVar = 100;
  test();
  document.write("myVar is" + myVar);

  function test() {
    let myVar = 50; //let을 날리면 지역변수가 더 쎄짐
  }



블록변수
  add("abc", "123");

  function add(a, d) {
    let local = a + b;
    if(b != null) { //b의 값이 하나라도 있으면
      let block = b + a;
      console.log(block); //안에서만 사용가능
    }
    console.log(local);
  }


=========================================
  let num = 100;
  function menu(){
    num += 100;
    alert(num);
  }

  menu();

  function menu() {
    alert(num);
  }

  (function(){//즉시 실행함수
    let num = 100;
    function menu(){
      num += 100;
      alert(num);
    }
    
    menu();
  }());




jquery
  keydown
  keyup


$("이벤트 대상 선택자").on("click", function(){

})

$("이벤트 대상 선택자").on({
  "click":function(){자바스크립트 코드},
  "dbclick":function(){자바스크립트 코드}
})



$(function(){
  $(".btn1").click(function(){
    $(".btn1").parent().next().css({"color":"#f00"});
  });

  $(".btn2").on({
    "mouseover focus": function(){
      $(".btn2").parent().next().css({"color":"#0f0"});
    },
    "mouseout blur": function(){
      $(".btn2").parent().next().css({"color":"#000"});
    }
  });
  // $(".btn1").click();
  // $(".btn2").trigger("mouseover");
  $(".btn1").off("click");
  $(".btn2").off("mouseover focus");

});




$(document).ready(function(){
  //문서를 로딩하자마자 작동
})



$(function(){
  $(document).ready(function(){
    let h1 = $(".img-01").height();
    console.log("ready:", h1);

    $(window).load(function(){
      let h2 = $(".img-01").height();
      console.log("load: ", h2);
    })
  })
})